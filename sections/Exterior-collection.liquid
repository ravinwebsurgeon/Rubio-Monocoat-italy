<div class="tab-products-wrap Exterior-wrap">
  <h4 class="oil-head">{{ section.settings.heading }}</h4>
  
  {% for block in section.blocks %}
    {% assign tab_collection = block.settings.tab_collection %}
    {% comment %} {% assign tab_collection = section.settings.Exterior_collection %} {% endcomment %}

    
    <div class="tab-productss {% if forloop.first %}active{% endif %}">
      <!-- Add dynamic class to <ul> -->
      <ul class="product-grid grid-{{ forloop.index0 }} collection-{{ tab_collection.handle }}">
        
        {% for product in tab_collection.products %}
          <li class="product-item"
              data-colours="{{ product.metafields.custom.colour_filter2.value | join: ',' }}"
              data-products="{{ product.metafields.custom.product_filter.value | join: ',' }}"
              data-available="{{ product.available }}"
              data-product-id="{{ product.variants.first.id }}"
              data-tags="{{product.tags | join:','}}"
            >                        
              
            <div class="product-item-img-col">
              <a href="{{ product.url }}">
                {% if product.featured_image %}
                  <div class="product-image-wrapper" 
                       data-cover="{{ product.metafields.custom.cover_image | img_url: 'master' }}" 
                       data-featured="{{ product.featured_image | img_url: '400x' }}">
                    {% if product.metafields.custom.cover_image != blank %}
                      <img class="cover-image" src="{{ product.metafields.custom.cover_image | img_url: ' ' }}" alt="{{ product.title }}">
                    {% endif %}
                    <img class="featured-image" src="{{ product.featured_image | img_url: ' ' }}" alt="{{ product.title | escape }}">
                  </div>
                {% endif %}
              </a>
              <div class="plus-show">{% render 'Cs-plus-icon' %}</div>
            </div>
            
            <div class="product-item-conts">
              <div class="product-buttons-wraper">
                <button class="more-info-color">More Info</button>
                <button class="order-sample-color">Order Sample</button>                  
              </div>
              <a href="{{ product.url }}">
                <h3>{{ product.title }}</h3>
                <p class="price hidden">{{ product.price | money }}</p>    
              </a>                         
            </div>
          </li>                      
        {% endfor %}
      </ul>
    </div>
  {% endfor %}
</div>

{% comment %} <script>
document.addEventListener('DOMContentLoaded', function() {
  const surfaceItems = document.querySelectorAll('.surface-item');
  const horizontalTab = document.querySelector('.collection-exterior-horizontal-surface').closest('.tab-productss');
  const verticalTab = document.querySelector('.collection-exterior-vertical-surface').closest('.tab-productss');

  // Hide both tabs initially
  horizontalTab.style.display = 'none';
  verticalTab.style.display = 'none';

  surfaceItems.forEach(item => {
    item.addEventListener('click', function() {
      // Remove active class from all buttons
      surfaceItems.forEach(btn => btn.classList.remove('active'));
      this.classList.add('active');

      // Swap logic
      if(this.classList.contains('vertical')) {
        // vertical active → show horizontal tab
        horizontalTab.style.display = 'block';
        verticalTab.style.display = 'none';
      } 
      else if(this.classList.contains('horizontal')) {
        // horizontal active → show vertical tab
        verticalTab.style.display = 'block';
        horizontalTab.style.display = 'none';
      }
    });
  }); 
});
</script>  {% endcomment %}



{% schema %}
{
  "name": "Exterior-collection",
  "settings": [
    { "type": "text", "id": "heading", "label": "Main Heading" },
    { "type": "collection", "id": "interior_collection", "label": "Interior Collection" }

    
  ],
  "blocks": [
    {
      "type": "Exterior-collection",
      "name": "collection",
      "settings": [
       
        { "type": "collection", "id": "tab_collection", "label": "Collection to show" }
      ]
    }
  ],
  "presets": [{ "name": "Exterior-collection", "category": "Custom" }]
}
{% endschema %}