<div class="tab-products-wrap Exterior-wrap">
  {% if section.settings.heading != blank %}
    <h4 class="oil-head">{{ section.settings.heading }}</h4>
  {% endif %}

  {% assign tab_collection = collections[section.settings.exterior_collection] %}

  {% if tab_collection != blank %}
    <div class="tab-productss active">
      <ul class="product-grid collection-{{ tab_collection.handle }}">
        {% for product in tab_collection.products %}
          <li class="product-item"
              data-colours="{{ product.metafields.custom.colour_filter2.value | join: ',' }}"
              data-products="{{ product.metafields.custom.product_filter.value | join: ',' }}"
              data-available="{{ product.available }}"
              data-product-id="{{ product.variants.first.id }}"
              data-tags="{{ product.tags | join: ',' }}">
            
            <div class="product-item-img-col">
              <a href="{{ product.url }}">
                {% if product.featured_image %}
                  <div class="product-image-wrapper"
                       data-cover="{{ product.metafields.custom.cover_image | img_url: 'master' }}"
                       data-featured="{{ product.featured_image | img_url: '400x' }}">
                    {% if product.metafields.custom.cover_image != blank %}
                      <img class="cover-image" src="{{ product.metafields.custom.cover_image | img_url: 'master' }}" alt="{{ product.title }}">
                    {% endif %}
                    <img class="featured-image" src="{{ product.featured_image | img_url: 'master' }}" alt="{{ product.title | escape }}">
                  </div>
                {% endif %}
              </a>
              <div class="plus-show">{% render 'Cs-plus-icon' %}</div>
            </div>

            <div class="product-item-conts">
              <div class="product-buttons-wraper">
                <button class="more-info-color">More Info</button>
                <button class="order-sample-color">Order Sample</button>
              </div>
              <a href="{{ product.url }}">
                <h3>{{ product.title }}</h3>
                <p class="price hidden">{{ product.price | money }}</p>
              </a>
            </div>
          </li>
        {% endfor %}
      </ul>
    </div>
  {% else %}
    <p>No collection selected or collection is empty.</p>
  {% endif %}
</div>

{% comment %} <script>
document.addEventListener('DOMContentLoaded', function() {
  const surfaceItems = document.querySelectorAll('.surface-item');
  const horizontalTab = document.querySelector('.collection-exterior-horizontal-surface').closest('.tab-productss');
  const verticalTab = document.querySelector('.collection-exterior-vertical-surface').closest('.tab-productss');

  // Hide both tabs initially
  horizontalTab.style.display = 'none';
  verticalTab.style.display = 'none';

  surfaceItems.forEach(item => {
    item.addEventListener('click', function() {
      // Remove active class from all buttons
      surfaceItems.forEach(btn => btn.classList.remove('active'));
      this.classList.add('active');

      // Swap logic
      if(this.classList.contains('vertical')) {
        // vertical active → show horizontal tab
        horizontalTab.style.display = 'block';
        verticalTab.style.display = 'none';
      } 
      else if(this.classList.contains('horizontal')) {
        // horizontal active → show vertical tab
        verticalTab.style.display = 'block';
        horizontalTab.style.display = 'none';
      }
    });
  }); 
});
</script>  {% endcomment %}



{% schema %}
{
  "name": "Exterior Collection",
  "settings": [
    { "type": "text", "id": "heading", "label": "Main Heading" },
    { "type": "collection", "id": "exterior_collection", "label": "Exterior Collection" }
  ],
   "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { "type": "text", "id": "tab_name", "label": "Species name" },
        { "type": "text", "id": "tag_name", "label": "Interior Tag name" },
        { "type": "text", "id": "exterior_tag_name", "label": "Exterior Tag name" },
        { "type": "image_picker", "id": "tab_image", "label": "Tab image" },
        { "type": "collection", "id": "tab_collection", "label": "Collection to show" }
      ]
    }
  ],
  "presets": [{ "name": "Exterior Collection", "category": "Custom" }]
}
{% endschema %}