<product-info
  id="MainProduct-{{ section.id }}"
  class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}"
  data-section="{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-update-url="true"
  data-url="{{ product.url }}"
  {% if section.settings.image_zoom == 'hover' %}
    data-zoom-on-hover
  {% endif %}
>
  {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

  {% unless product.has_only_default_variant %}
    {{ 'component-product-variant-picker.css' | asset_url | stylesheet_tag }}
    {{ 'component-swatch-input.css' | asset_url | stylesheet_tag }}
    {{ 'component-swatch.css' | asset_url | stylesheet_tag }}
  {% endunless %}
  {%- if product.quantity_price_breaks_configured? -%}
    {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  {%- style -%}
  .addon-popup{z-index:9999999;}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}

  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  {%- if product.quantity_price_breaks_configured? -%}
    <script src="{{ 'show-more.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {% if section.settings.image_zoom == 'hover' %}
    <script id="EnableZoomOnHover-main" src="{{ 'magnify.js' | asset_url }}" defer="defer"></script>
  {% endif %}
  {%- if request.design_mode -%}
    <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id="ModelViewerStyle"
      rel="stylesheet"
      href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
      media="print"
      onload="this.media='all'"
    >
    <link
      id="ModelViewerOverride"
      rel="stylesheet"
      href="{{ 'component-model-viewer-ui.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
  {%- endif -%}

  {% assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' %}
  <div class="page-width product-section">
    
<!-- Addon Popup Modal -->
<div class="addon-popup" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); justify-content:center; align-items:center;">
  <div class="addon-popup-content" style="background:#fff; padding:20px; max-width:400px; width:90%; position:relative;">
    <button class="addon-popup-close" style="position:absolute; top:10px; right:10px;">X</button>
    <div class="popup-img-box-wrap">
    <img src="" alt="" class="addon-popup-image" style="width:100%; margin-bottom:15px;">
    </div>
    <div class="popup-info-wrapper">
    <h3 class="addon-popup-title"></h3>
    <p class="addon-popup-price"></p>
    <select class="addon-popup-variant" style="width:100%; margin:10px 0;"></select>
    <button class="addon-popup-addtocart">Add to Cart</button>
    </div>
  </div>
</div>
    <div class="product product--{{ section.settings.media_size }} product--{{ section.settings.media_position }} product--{{ section.settings.gallery_layout }} product--mobile-{{ section.settings.mobile_thumbnails }} grid grid--1-col {% if product.media.size > 0 %}grid--2-col-tablet{% else %}product--no-media{% endif %}">
      <div class="grid__item product__media-wrapper">
        {% render 'product-media-gallery', variant_images: variant_images %}
        
      </div>

      <div class="product__info-wrapper grid__item{% if settings.page_width > 1400 and section.settings.media_size == "small" %} product__info-wrapper--extra-padding{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        <section
          id="ProductInfo-{{ section.id }}"
          class="product__info-container{% if section.settings.enable_sticky_info %} product__column-sticky{% endif %}"
        >
          {%- assign product_form_id = 'product-form-' | append: section.id -%}

          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'text' -%}
                <p
                  class="product__text inline-richtext{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}"
                  {{ block.shopify_attributes }}
                >
                  {{- block.settings.text -}}
                </p>

              {%- when 'title' -%}
                {%- if product.metafields.custom.tag_name != blank -%}
                  <div class="product-tag">
                    <div class="product-tag-img">
                      <img src="https://cdn.shopify.com/s/files/1/0680/7647/0314/files/b80f295f5cecee70acea3eade769e3f73e30a030.png?v=1757669654">
                    </div>
                    <span>{{ product.metafields.custom.tag_name }}</span>
                  </div>
                {%- endif -%}

                <div class="product-title-price">
                  <div class="product__title sdfds" {{ block.shopify_attributes }}>
                    <h1>{{ product.title | escape }}</h1>
                    <a href="{{ product.url }}" class="product__title">
                      <h2 class="h1">
                        {{ product.title | escape }}
                      </h2>
                    </a>
                  </div>
                  <div id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                    {%- render 'price',
                      product: product,
                      use_variant: true,
                      show_badges: true,
                      price_class: 'price--large'
                    -%}
                  </div>
                </div>

              {%- when 'shipping_info' -%}
                <div class="payment-method">
                  {{ product.metafields.custom.shipping_info | metafield_tag }}
                </div>
                {%- if product.quantity_price_breaks_configured? -%}
                  <div class="volume-pricing-note" id="Volume-Note-{{ section.id }}">
                    <span>{{ 'products.product.volume_pricing.note' | t }}</span>
                  </div>
                {%- endif -%}
                {% comment %}
                  {%- if cart.taxes_included or cart.duties_included or shop.shipping_policy.body != blank -%}
                     <div class="product__tax caption rte">
                      {%- if cart.duties_included and cart.taxes_included -%}
                        {{ 'products.product.duties_and_taxes_included' | t }}
                      {%- elsif cart.taxes_included -%}
                        {{ 'products.product.taxes_included' | t }}
                      {%- elsif cart.duties_included -%}
                        {{ 'products.product.duties_included' | t }}
                      {%- endif -%}
                      {%- if shop.shipping_policy.body != blank -%}
                        {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                      {%- endif -%}
                    </div>
                  {%- endif -%}
                {% endcomment %}
                <div {{ block.shopify_attributes }}>
                  {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                  {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                    {{ form | payment_terms }}
                  {%- endform -%}
                </div>

              {%- when 'custom_review' -%}
                <div class="custom-review">
                  <span>
                    <svg width="104" height="21" viewBox="0 0 104 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M10.4 0L12.7349 7.18622H20.291L14.178 11.6276L16.513 18.8138L10.4 14.3724L4.28703 18.8138L6.62198 11.6276L0.509012 7.18622H8.06505L10.4 0Z" fill="#183029"/><path d="M31.2008 0L33.5357 7.18622H41.0918L34.9788 11.6276L37.3137 18.8138L31.2008 14.3724L25.0878 18.8138L27.4228 11.6276L21.3098 7.18622H28.8658L31.2008 0Z" fill="#183029"/><path d="M51.9996 0L54.3346 7.18622H61.8906L55.7776 11.6276L58.1126 18.8138L51.9996 14.3724L45.8866 18.8138L48.2216 11.6276L42.1086 7.18622H49.6647L51.9996 0Z" fill="#183029"/><path d="M72.8004 0L75.1353 7.18622H82.6914L76.5784 11.6276L78.9134 18.8138L72.8004 14.3724L66.6874 18.8138L69.0224 11.6276L62.9094 7.18622H70.4654L72.8004 0Z" fill="#183029"/><path d="M93.5992 0L95.9342 7.18622H103.49L97.3772 11.6276L99.7122 18.8138L93.5992 14.3724L87.4863 18.8138L89.8212 11.6276L83.7082 7.18622H91.2643L93.5992 0Z" fill="#183029"/>
                    </svg>
                  </span>
                  {{ block.settings.custom_review }}
                </div>

              {%- when 'inventory' -%}
                <p
                  class="product__inventory{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.inventory_management != 'shopify' %} visibility-hidden{% endif %}"
                  {{ block.shopify_attributes }}
                  id="Inventory-{{ section.id }}"
                  role="status"
                >
                  {%- if product.selected_or_first_available_variant.inventory_management == 'shopify' -%}
                    {%- if product.selected_or_first_available_variant.inventory_quantity > 0 -%}
                      {%- if product.selected_or_first_available_variant.inventory_quantity
                          <= block.settings.inventory_threshold
                      -%}
                        <span class="svg-wrapper" style="color: rgb(238, 148, 65)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {%- if block.settings.show_inventory_quantity -%}
                          {{-
                            'products.product.inventory_low_stock_show_count'
                            | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          -}}
                        {%- else -%}
                          {{- 'products.product.inventory_low_stock' | t -}}
                        {%- endif -%}
                      {%- else -%}
                        <span class="svg-wrapper" style="color: rgb(62, 214, 96)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {%- if block.settings.show_inventory_quantity -%}
                          {{-
                            'products.product.inventory_in_stock_show_count'
                            | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          -}}
                        {%- else -%}
                          {{- 'products.product.inventory_in_stock' | t -}}
                        {%- endif -%}
                      {%- endif -%}
                    {%- else -%}
                      {%- if product.selected_or_first_available_variant.inventory_policy == 'continue' -%}
                        <span class="svg-wrapper" style="color: rgb(62, 214, 96)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {{- 'products.product.inventory_out_of_stock_continue_selling' | t -}}
                      {%- else -%}
                        <span class="svg-wrapper" style="color: rgb(200, 200, 200)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {{- 'products.product.inventory_out_of_stock' | t -}}
                      {%- endif -%}
                    {%- endif -%}
                  {%- endif -%}
                </p>
              {%- when 'description' -%}
                {%- if product.description != blank -%}
                  <div class="product__description rte quick-add-hidden" {{ block.shopify_attributes }}>
                    {{ product.description }}
                  </div>
                {%- endif -%}
                {% comment %} icon section code {% endcomment %}
              {%- when 'product_features' -%}
                <div class="product-features" {{ block.shopify_attributes }}>
                  {% for i in (1..5) %}
                    {% assign svg_key = 'feature_svg' | append: i %}
                    {% assign text_key = 'feature_text' | append: i %}

                    {% assign svg = product.metafields.custom[svg_key] %}
                    {% assign text = product.metafields.custom[text_key] %}

                    {% if svg != blank or text != blank %}
                      <div class="feature-item">
                        <div class="feature-icon">{{ svg }}</div>
                        <div class="feature-text">{{ text }}</div>
                      </div>
                    {% endif %}
                  {% endfor %}
                </div>

                {% comment %} icon section code end {% endcomment %}

              {%- when 'sku' -%}
                <p
                  class="product__sku{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.sku.size == 0 %} visibility-hidden{% endif %}"
                  id="Sku-{{ section.id }}"
                  role="status"
                  {{ block.shopify_attributes }}
                >
                  <span class="visually-hidden">{{ 'products.product.sku' | t }}:</span>
                  {{- product.selected_or_first_available_variant.sku -}}
                </p>
              {%- when 'custom_liquid' -%}
                {{ block.settings.custom_liquid }}
              {%- when 'collapsible_tab' -%}
                <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
                  <details id="Details-{{ block.id }}-{{ section.id }}">
                    <summary>
                      <div class="summary__title">
                        {% render 'icon-accordion', icon: block.settings.icon %}
                        <h2 class="h4 accordion__title inline-richtext">
                          {{ block.settings.heading | default: block.settings.page.title | escape }}
                        </h2>
                      </div>
                      {{- 'icon-caret.svg' | inline_asset_content -}}
                    </summary>
                    <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                      {{ block.settings.content }}
                      {{ block.settings.page.content }}
                    </div>
                  </details>
                </div>
              {%- when 'quantity_selector' -%}
                {% comment %}
                  Show “In stock – Ready to be shipped” if the current product/variant is available
                {% endcomment %}

                {% if product.available %}
                  <p class="stock-status in-stock">In stock – Ready to be shipped</p>
                {% else %}
                  <p class="stock-status out-of-stock">Out of stock</p>
                {% endif %}

                <div class="quantity-add-to-cart">
                  <div
                    id="Quantity-Form-{{ section.id }}"
                    class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                    {% # theme-check-disable %}
                    {%- assign cart_qty = cart
                      | item_count_for_variant: product.selected_or_first_available_variant.id
                    -%}
                    {% # theme-check-enable %}
                    <span class="visually-hidden" id="quantity-label-{{ section.id }}">
                      {%- if cart_qty > 0 -%}
                        {{- 'products.product.quantity.in_cart_aria_label' | t: quantity: cart_qty -}}
                      {%- else -%}
                        {{- 'products.product.quantity.label' | t -}}
                      {%- endif -%}
                    </span>
                    <label
                      class="quantity__label form__label"
                      for="Quantity-{{ section.id }}"
                      aria-labelledby="quantity-label-{{ section.id }}"
                    >
                      <span aria-hidden="true">{{ 'products.product.quantity.label' | t }}</span>
                      <span class="quantity__rules-cart{% if cart_qty == 0 %} hidden{% endif %}" aria-hidden="true">
                        {%- render 'loading-spinner' -%}
                        <span
                          >(
                          {{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}}
                          )</span
                        >
                      </span>
                    </label>
                    <div class="price-per-item__container">
                      <quantity-input class="quantity" data-url="{{ product.url }}" data-section="{{ section.id }}">
                        <button class="quantity__button" name="minus" type="button">
                          <span class="visually-hidden">
                            {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                          </span>
                          <span class="svg-wrapper">
                            {{- 'icon-minus.svg' | inline_asset_content -}}
                          </span>
                        </button>
                        <input
                          class="quantity__input"
                          type="number"
                          name="quantity"
                          id="Quantity-{{ section.id }}"
                          data-cart-quantity="{{ cart_qty }}"
                          data-min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                          min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                          {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                            data-max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                            max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                          {% endif %}
                          step="{{ product.selected_or_first_available_variant.quantity_rule.increment }}"
                          value="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                          form="{{ product_form_id }}"
                        >
                        <button class="quantity__button" name="plus" type="button">
                          <span class="visually-hidden">
                            {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                          </span>
                          <span class="svg-wrapper">
                            {{- 'icon-plus.svg' | inline_asset_content -}}
                          </span>
                        </button>
                      </quantity-input>
                      {%- liquid
                        assign volume_pricing_array = product.selected_or_first_available_variant.quantity_price_breaks | sort: 'quantity' | reverse
                        assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.min
                        if cart_qty > 0
                          assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.increment
                        endif
                      -%}
                      {%- if product.quantity_price_breaks_configured? -%}
                        <price-per-item
                          id="Price-Per-Item-{{ section.id }}"
                          data-section-id="{{ section.id }}"
                          data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                        >
                          {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                            {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                            <div class="price-per-item">
                              {%- if variant_price_compare -%}
                                <dl class="price-per-item--current">
                                  <dt class="visually-hidden">
                                    {{ 'products.product.price.regular_price' | t }}
                                  </dt>
                                  <dd>
                                    <s class="variant-item__old-price">
                                      {{ variant_price_compare | money_with_currency }}
                                    </s>
                                  </dd>
                                </dl>
                              {%- endif -%}
                              {%- if current_qty_for_volume_pricing < volume_pricing_array.last.minimum_quantity -%}
                                {%- assign variant_price = product.selected_or_first_available_variant.price
                                  | money_with_currency
                                -%}
                                <span class="price-per-item--current">
                                  {{- 'products.product.volume_pricing.price_at_each_html' | t: price: variant_price -}}
                                </span>
                              {%- else -%}
                                {%- for price_break in volume_pricing_array -%}
                                  {%- if current_qty_for_volume_pricing >= price_break.minimum_quantity -%}
                                    {%- assign price_break_price = price_break.price | money_with_currency -%}
                                    <span class="price-per-item--current">
                                      {{-
                                        'products.product.volume_pricing.price_at_each_html'
                                        | t: price: price_break_price
                                      -}}
                                    </span>
                                    {%- break -%}
                                  {%- endif -%}
                                {%- endfor -%}
                              {%- endif -%}
                            </div>
                          {%- else -%}
                            {%- assign variant_price = product.selected_or_first_available_variant.price
                              | money_with_currency
                            -%}
                            {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                            <div class="price-per-item">
                              {%- if variant_price_compare -%}
                                <dl class="price-per-item--current">
                                  <dt class="visually-hidden">
                                    {{ 'products.product.price.regular_price' | t }}
                                  </dt>
                                  <dd>
                                    <s class="variant-item__old-price">
                                      {{ variant_price_compare | money_with_currency }}
                                    </s>
                                  </dd>
                                  <dt class="visually-hidden">
                                    {{ 'products.product.price.sale_price' | t }}
                                  </dt>
                                  <dd>
                                    <span class="price-per-item--current">
                                      {{-
                                        'products.product.volume_pricing.price_at_each_html'
                                        | t: price: variant_price
                                      -}}
                                    </span>
                                  </dd>
                                </dl>
                              {%- else -%}
                                <span class="price-per-item--current">
                                  {{- 'products.product.volume_pricing.price_at_each_html' | t: price: variant_price -}}
                                </span>
                              {%- endif -%}
                            </div>
                          {%- endif -%}
                        </price-per-item>
                      {%- endif -%}
                    </div>
                    <div class="quantity__rules caption" id="Quantity-Rules-{{ section.id }}">
                      {%- if product.selected_or_first_available_variant.quantity_rule.increment > 1 -%}
                        <span class="divider">
                          {{-
                            'products.product.quantity.multiples_of'
                            | t: quantity: product.selected_or_first_available_variant.quantity_rule.increment
                          -}}
                        </span>
                      {%- endif -%}
                      {%- if product.selected_or_first_available_variant.quantity_rule.min > 1 -%}
                        <span class="divider">
                          {{-
                            'products.product.quantity.minimum_of'
                            | t: quantity: product.selected_or_first_available_variant.quantity_rule.min
                          -}}
                        </span>
                      {%- endif -%}
                      {%- if product.selected_or_first_available_variant.quantity_rule.max != null -%}
                        <span class="divider">
                          {{-
                            'products.product.quantity.maximum_of'
                            | t: quantity: product.selected_or_first_available_variant.quantity_rule.max
                          -}}
                        </span>
                      {%- endif -%}
                    </div>
                    {%- if product.quantity_price_breaks_configured? -%}
                      <volume-pricing class="parent-display" id="Volume-{{ section.id }}">
                        {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                          <span class="caption-large">{{ 'products.product.volume_pricing.title' | t }}</span>
                          <ul class="list-unstyled">
                            <li>
                              <span>{{ product.selected_or_first_available_variant.quantity_rule.min }}+</span>
                              {%- assign price = product.selected_or_first_available_variant.price
                                | money_with_currency
                              -%}
                              <span data-text="{{ 'products.product.volume_pricing.price_at_each_html' | t: price: variant_price }}">
                                {{- 'sections.quick_order_list.each' | t: money: price -}}
                              </span>
                            </li>
                            {%- for price_break in product.selected_or_first_available_variant.quantity_price_breaks -%}
                              {%- assign price_break_price = price_break.price | money_with_currency -%}
                              <li class="{%- if forloop.index >= 3 -%}show-more-item hidden{%- endif -%}">
                                <span>
                                  {{- price_break.minimum_quantity -}}
                                  <span aria-hidden="true">+</span></span
                                >
                                <span data-text="{{ 'products.product.volume_pricing.price_at_each_html' | t: price: price_break_price }}">
                                  {{- 'sections.quick_order_list.each' | t: money: price_break_price -}}
                                </span>
                              </li>
                            {%- endfor -%}
                          </ul>
                          {%- if product.selected_or_first_available_variant.quantity_price_breaks.size >= 3 -%}
                            <show-more-button>
                              <button
                                class="button-show-more link underlined-link"
                                id="Show-More-{{ section.id }}"
                                type="button"
                              >
                                <span class="label-show-more label-text"
                                  ><span aria-hidden="true">+ </span>{{ 'products.facets.show_more' | t }}
                                </span>
                              </button>
                            </show-more-button>
                          {%- endif -%}
                        {%- endif -%}
                      </volume-pricing>
                    {%- endif -%}
                  </div>
                  {%- render 'buy-buttons',
                    block: block,
                    product: product,
                    product_form_id: product_form_id,
                    section_id: section.id,
                    show_pickup_availability: true
                  -%}
                </div>
              {%- when 'popup' -%}
                <modal-opener
                  class="product-popup-modal__opener quick-add-hidden"
                  data-modal="#PopupModal-{{ block.id }}"
                  {{ block.shopify_attributes }}
                >
                  <button
                    id="ProductPopup-{{ block.id }}"
                    class="product-popup-modal__button link"
                    type="button"
                    aria-haspopup="dialog"
                  >
                    {{ block.settings.text | default: block.settings.page.title | escape }}
                  </button>
                </modal-opener>
              {%- when 'share' -%}
                {% liquid
                  assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin
                  render 'share-button', block: block, share_link: share_url
                %}

              {%- when 'variant_picker' -%}
                {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
              {%- when 'buy_buttons' -%}
                {% comment %} <div class="product-addons-wrapper">
                  <!-- Accordion Header -->
                  <div class="addons-header">
                    <span>
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" height="20" width="20">
                        <path stroke-linejoin="round" stroke-linecap="round" stroke-width="1.5" stroke="black" d="M10.1 7.21667V1.25M10.1 7.21667L12.7917 4.6M10.1 7.21667L7.40833 4.6M16.5417 13.6583V17.5083L10.1083 19.075M3.66667 13.6583V17.5083L10.1 19.075V11.8M10.1 8.925L7.68333 12.8417L1.25 12.0583L3.66667 8.925H10.1ZM10.1 8.925L12.5167 12.8417L18.95 12.0583L16.5333 8.925H10.1Z"></path>
                      </svg>
                      Popular upgrades
                    </span>
                    <button type="button" class="addons-toggle" aria-label="Toggle">
                      <!-- Collapsed (down arrow) SVG -->
                      <span class="icon-collapsed" style="display:none;">
                        <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                          <path d="M5 7l5 5 5-5" stroke="#000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                      </span>
                      <!-- Expanded (cross) SVG -->
                      <span class="icon-expanded" style="display:inline-block;">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                          <path d="M12 4L4 12M4 4L12 12" stroke="#000" stroke-width="1.5" stroke-linecap="round"/>
                        </svg>
                      </span>
                    </button>
                  </div>

                  <!-- Accordion Body -->
                  <div class="addons-list open">
                    <!-- Added 'open' class by default -->
                    {% if product.metafields.custom.product_addon.value %}
                      {% for addon_product in product.metafields.custom.product_addon.value %}
                        <div class="addon-item">
                          <label class="addon-label">
                            <input
                              type="checkbox"
                              class="addon-checkbox"
                              data-variant-id="{{ addon_product.variants.first.id }}"
                            >
                            <img
                              src="{{ addon_product.featured_image | img_url: '100x100' }}"
                              alt="{{ addon_product.title }}"
                            >
                            <span class="addon-title">{{ addon_product.title }}</span>
                            <span class="addon-price">{{ addon_product.price | money }}</span>
                             <button type="button" class="addon-choose-btn" data-addon-id="{{ addon_product.id }}">
      Choose Options
    </button>
                          </label>
                        </div>
                      {% endfor %}
                    {% endif %}
                  </div>
                </div>
<div class="addon-popup" style="display:none;">
  <div class="addon-popup-content">
    <button class="addon-popup-close">X</button>
    <img src="" alt="" class="addon-popup-image">
    <h3 class="addon-popup-title"></h3>
    <p class="addon-popup-price"></p>
    <select class="addon-popup-variant">
      <!-- variants will be populated dynamically -->
    </select>
    <button class="addon-popup-select">Select</button>
  </div>
</div>
                <script>
                  document.addEventListener('DOMContentLoaded', function () {
                    document.querySelectorAll('.product-addons-wrapper').forEach((wrapper) => {
                      const toggleBtn = wrapper.querySelector('.addons-toggle');
                      const list = wrapper.querySelector('.addons-list');
                      const collapsed = wrapper.querySelector('.icon-collapsed');
                      const expanded = wrapper.querySelector('.icon-expanded');

                      function toggleAccordion() {
                        if (list.classList.contains('open')) {
                          // Collapse
                          list.classList.remove('open');
                          collapsed.style.display = 'inline-block';
                          expanded.style.display = 'none';
                        } else {
                          // Expand
                          list.classList.add('open');
                          collapsed.style.display = 'none';
                          expanded.style.display = 'inline-block';
                        }
                      }

                      // Click on toggle button (X or arrow)
                      toggleBtn.addEventListener('click', (e) => {
                        e.stopPropagation();
                        toggleAccordion();
                      });

                      // Optional: click on header (excluding items) to toggle
                      wrapper.addEventListener('click', (e) => {
                        if (!e.target.closest('.addon-item') && !e.target.closest('.addons-toggle')) {
                          toggleAccordion();
                        }
                      });
                    });

                    // Add to Cart handling
                    let mainForm = document.querySelector("form[action*='/cart/add']");
                    if (mainForm) {
                      mainForm.addEventListener('submit', function (e) {
                        e.preventDefault();

                        let formData = new FormData(mainForm);
                        let items = [];
                        items.push({
                          id: formData.get('id'), // main product variant id
                          quantity: formData.get('quantity') || 1,
                        });

                        document.querySelectorAll('.addon-checkbox:checked').forEach((cb) => {
                          items.push({
                            id: cb.getAttribute('data-variant-id'),
                            quantity: 1,
                          });
                        });

                        fetch('/cart/add.js', {
                          method: 'POST',
                          headers: { 'Content-Type': 'application/json' },
                          body: JSON.stringify({ items: items }),
                        })
                          .then((res) => res.json())
                          .then(() => {
                            window.location.href = '/cart';
                          });
                      });
                    }
                  });
                </script> {% endcomment %}

<div class="product-addons-wrapper">
  <!-- Accordion Header -->
  <div class="addons-header">
    <span>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" height="20" width="20">
        <path stroke-linejoin="round" stroke-linecap="round" stroke-width="1.5" stroke="black" d="M10.1 7.21667V1.25M10.1 7.21667L12.7917 4.6M10.1 7.21667L7.40833 4.6M16.5417 13.6583V17.5083L10.1083 19.075M3.66667 13.6583V17.5083L10.1 19.075V11.8M10.1 8.925L7.68333 12.8417L1.25 12.0583L3.66667 8.925H10.1ZM10.1 8.925L12.5167 12.8417L18.95 12.0583L16.5333 8.925H10.1Z"></path>
      </svg>
      Popular upgrades
    </span>
    <button type="button" class="addons-toggle" aria-label="Toggle">
      <span class="icon-collapsed" style="display:none;">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
          <path d="M5 7l5 5 5-5" stroke="#000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </span>
      <span class="icon-expanded" style="display:inline-block;">
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
          <path d="M12 4L4 12M4 4L12 12" stroke="#000" stroke-width="1.5" stroke-linecap="round"/>
        </svg>
      </span>
    </button>
  </div>

  <!-- Accordion Body -->
  <div class="addons-list open">
    {% if product.metafields.custom.product_addon.value %}
      {% for addon_product in product.metafields.custom.product_addon.value %}
        <div class="addon-item" style="display:flex; align-items:center; margin-bottom:10px;">
          <img src="{{ addon_product.featured_image | img_url:'100x100' }}" alt="{{ addon_product.title }}" style="width:60px; height:60px; object-fit:cover; margin-right:10px;">
          <div class="addon-info" style="flex:1;">
            <span class="addon-title">{{ addon_product.title }}</span>
            <span class="addon-price" style="display:block;">{{ addon_product.price | money }}</span>
          </div>
          
          {% if addon_product.variants.size > 1 %}
            <button type="button" class="addon-choose-btn" data-addon-id="{{ addon_product.id }}">
              Choose Options
            </button>
          {% else %}
            <!-- Direct Add to Cart button if no variants -->
            <button type="button" class="addon-addtocart-btn" data-variant-id="{{ addon_product.variants.first.id }}">
              Add to Cart
            </button>
          {% endif %}
        </div>
      {% endfor %}
    {% endif %}
  </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function () {

  // Accordion toggle logic
  document.querySelectorAll('.product-addons-wrapper').forEach((wrapper) => {
    const toggleBtn = wrapper.querySelector('.addons-toggle');
    const list = wrapper.querySelector('.addons-list');
    const collapsed = wrapper.querySelector('.icon-collapsed');
    const expanded = wrapper.querySelector('.icon-expanded');

    function toggleAccordion() {
      if (list.classList.contains('open')) {
        list.classList.remove('open');
        collapsed.style.display = 'inline-block';
        expanded.style.display = 'none';
      } else {
        list.classList.add('open');
        collapsed.style.display = 'none';
        expanded.style.display = 'inline-block';
      }
    }

    toggleBtn.addEventListener('click', (e) => { e.stopPropagation(); toggleAccordion(); });
    wrapper.addEventListener('click', (e) => {
      if (!e.target.closest('.addon-item') && !e.target.closest('.addons-toggle')) toggleAccordion();
    });
  });

  // Addon popup logic
  const popup = document.querySelector('.addon-popup');
  const popupImage = popup.querySelector('.addon-popup-image');
  const popupTitle = popup.querySelector('.addon-popup-title');
  const popupPrice = popup.querySelector('.addon-popup-price');
  const popupVariant = popup.querySelector('.addon-popup-variant');
  const popupAddBtn = popup.querySelector('.addon-popup-addtocart');
  const popupClose = popup.querySelector('.addon-popup-close');
  const addonData = {{ product.metafields.custom.product_addon.value | json }};

  document.querySelectorAll('.addon-choose-btn').forEach((btn) => {
    btn.addEventListener('click', () => {
      const addonId = btn.getAttribute('data-addon-id');
      const addonProduct = addonData.find(p => p.id == addonId);

      // Populate popup
      popupImage.src = addonProduct.featured_image;
      popupTitle.textContent = addonProduct.title;
      popupPrice.textContent = `$${(addonProduct.price/100).toFixed(2)}`;

      // Populate variants
      popupVariant.innerHTML = '';
      addonProduct.variants.forEach(v => {
        const opt = document.createElement('option');
        opt.value = v.id;
        opt.textContent = v.title;
        popupVariant.appendChild(opt);
      });

      // Store selected addon ID
      popup.setAttribute('data-addon-id', addonId);
      document.body.classList.add('overlay');

      popup.style.display = 'flex';
    
    });
  });

  popupAddBtn.addEventListener('click', () => {
    const variantId = popupVariant.value;

    // Add selected variant to cart
    fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    })
    .then(res => res.json())
    .then(() => {
      popup.style.display = 'none';
      window.location.href = '/cart';
    });
  });

  popupClose.addEventListener('click', () => {
     popup.style.display = 'none'; 
     document.body.classList.remove('overlay');
    });

  // Direct Add to Cart buttons for single-variant products
  document.querySelectorAll('.addon-addtocart-btn').forEach((btn) => {
    btn.addEventListener('click', () => {
      const variantId = btn.getAttribute('data-variant-id');
      fetch('/cart/add.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id: variantId, quantity: 1 })
      })
      .then(res => res.json())
      .then(() => { window.location.href = '/cart'; });
    });
  });

});
</script>



                {% comment %} product add on code end {% endcomment %}
              {%- when 'rating' -%}
                {%- if product.metafields.reviews.rating.value != blank -%}
                  <div class="rating-wrapper">
                    {% liquid
                      assign rating_decimal = 0
                      assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                      if decimal >= 0.3 and decimal <= 0.7
                        assign rating_decimal = 0.5
                      elsif decimal > 0.7
                        assign rating_decimal = 1
                      endif
                    %}
                    <div
                      class="rating"
                      role="img"
                      aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}"
                    >
                      <span
                        aria-hidden="true"
                        class="rating-star"
                        style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"
                      ></span>
                    </div>
                    <p class="rating-text caption">
                      <span aria-hidden="true">
                        {{- product.metafields.reviews.rating.value }} /
                        {{ product.metafields.reviews.rating.value.scale_max -}}
                      </span>
                    </p>
                    <p class="rating-count caption">
                      <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                      <span class="visually-hidden">
                        {{- product.metafields.reviews.rating_count }}
                        {{ 'accessibility.total_reviews' | t -}}
                      </span>
                    </p>
                  </div>
                {%- endif -%}
              {%- when 'complementary' -%}
                <product-recommendations
                  class="complementary-products quick-add-hidden{% if block.settings.make_collapsible_row %} is-accordion{% endif %}{% if block.settings.enable_quick_add %} complementary-products-contains-quick-add{% endif %}"
                  data-url="{{ routes.product_recommendations_url }}?limit={{ block.settings.product_list_limit }}&intent=complementary"
                  data-section-id="{{ section.id }}"
                  data-product-id="{{ product.id }}"
                >
                  {%- if recommendations.performed and recommendations.products_count > 0 -%}
                    <aside
                      aria-label="{{ 'accessibility.complementary_products' | t }}"
                      {{ block.shopify_attributes -}}
                      {% if block.settings.make_collapsible_row %}
                        class="product__accordion accordion"
                      {% endif %}
                    >
                      <div class="complementary-products__container">
                        {%- if block.settings.make_collapsible_row -%}
                          <details id="Details-{{ block.id }}-{{ section.id }}" open>
                            <summary>
                        {%- endif %}
                        <div class="summary__title">
                          {%- if block.settings.make_collapsible_row -%}
                            {% render 'icon-accordion', icon: block.settings.icon %}
                            <h2 class="h4 accordion__title">{{ block.settings.block_heading }}</h2>
                          {%- else -%}
                            <h2 class="h3 accordion__title">{{ block.settings.block_heading }}</h2>
                          {%- endif -%}
                        </div>
                        {%- if block.settings.make_collapsible_row -%}
                          {{- 'icon-caret.svg' | inline_asset_content -}}
                          </summary>
                        {%- endif -%}
                        <slideshow-component class="slider-mobile-gutter">
                          {%- assign number_of_slides = recommendations.products_count
                            | plus: 0.0
                            | divided_by: block.settings.products_per_page
                            | ceil
                          -%}
                          <div
                            id="Slider-{{ block.id }}"
                            class="contains-card contains-card--product complementary-slider grid grid--1-col slider slider--everywhere"
                            role="list"
                            {% if number_of_slides > 1 %}
                              aria-label="{{ 'general.slider.name' | t }}"
                            {% endif %}
                          >
                            {% assign skip_card_product_styles = false %}
                            {%- for i in (1..number_of_slides) -%}
                              <div
                                id="Slide-{{ block.id }}-{{ forloop.index }}"
                                class="complementary-slide complementary-slide--{{ settings.card_style }} grid__item slider__slide slideshow__slide"
                                tabindex="-1"
                                role="group"
                                {% if number_of_slides > 1 %}
                                  aria-roledescription="{{ 'sections.slideshow.slide' | t }}"
                                  aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                                {% endif %}
                              >
                                <ul class="list-unstyled" role="list">
                                  {%- for product in recommendations.products
                                    limit: block.settings.products_per_page
                                    offset: continue
                                  -%}
                                    <li>
                                      {%- if block.settings.enable_quick_add -%}
                                        {% assign quick_add = 'standard' %}
                                      {%- else -%}
                                        {% assign quick_add = 'none' %}
                                      {%- endif -%}
                                      {% render 'card-product',
                                        card_product: product,
                                        media_aspect_ratio: block.settings.image_ratio,
                                        show_secondary_image: false,
                                        lazy_load: false,
                                        skip_styles: skip_card_product_styles,
                                        quick_add: quick_add,
                                        section_id: section.id,
                                        horizontal_class: true,
                                        horizontal_quick_add: true
                                      %}
                                    </li>
                                    {%- assign skip_card_product_styles = true -%}
                                  {%- endfor -%}
                                </ul>
                              </div>
                            {%- endfor -%}
                          </div>
                          {%- if number_of_slides > 1 -%}
                            <div class="slider-buttons">
                              <button
                                type="button"
                                class="slider-button slider-button--prev"
                                name="previous"
                                aria-label="{{ 'general.slider.previous_slide' | t }}"
                              >
                                <span class="svg-wrapper">
                                  {{- 'icon-caret.svg' | inline_asset_content -}}
                                </span>
                              </button>
                              <div class="slider-counter slider-counter--{{ block.settings.pagination_style }}{% if block.settings.pagination_style == 'counter' or block.settings.pagination_style == 'numbers' %} caption{% endif %}">
                                {%- if block.settings.pagination_style == 'counter' -%}
                                  <span class="slider-counter--current">1</span>
                                  <span aria-hidden="true"> / </span>
                                  <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                                  <span class="slider-counter--total">{{ number_of_slides }}</span>
                                {%- else -%}
                                  <div class="slideshow__control-wrapper">
                                    {%- for i in (1..number_of_slides) -%}
                                      <button
                                        class="slider-counter__link slider-counter__link--{{ block.settings.pagination_style }} link"
                                        aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                                        aria-controls="Slider-{{ block.id }}"
                                      >
                                        {%- if block.settings.pagination_style == 'numbers' -%}
                                          {{ forloop.index -}}
                                        {%- else -%}
                                          <span class="dot"></span>
                                        {%- endif -%}
                                      </button>
                                    {%- endfor -%}
                                  </div>
                                {%- endif -%}
                              </div>
                              <button
                                type="button"
                                class="slider-button slider-button--next"
                                name="next"
                                aria-label="{{ 'general.slider.next_slide' | t }}"
                              >
                                <span class="svg-wrapper">
                                  {{- 'icon-caret.svg' | inline_asset_content -}}
                                </span>
                              </button>
                            </div>
                          {%- endif -%}
                        </slideshow-component>
                        {%- if block.settings.make_collapsible_row -%}
                          </details>
                        {%- endif -%}
                      </div>
                    </aside>
                  {%- endif -%}
                  {{ 'component-card.css' | asset_url | stylesheet_tag }}
                  {{ 'component-complementary-products.css' | asset_url | stylesheet_tag }}
                  {%- if block.settings.enable_quick_add -%}
                    {{ 'quick-add.css' | asset_url | stylesheet_tag }}
                    <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
                  {%- endif -%}
                </product-recommendations>
              {%- when 'icon-with-text' -%}
                {% render 'icon-with-text', block: block %}
            {%- endcase -%}
            {% for block in section.blocks %}
              {% case block.type %}
                {% when 'icons_text_custom' %}
                  {% render 'icons-text-custom', block: block %}
              {% endcase %}
            {% endfor %}
          {%- endfor -%}
          <a href="{{ product.url }}" class="link product__view-details animate-arrow">
            {{ 'products.product.view_full_details' | t }}
            {{- 'icon-arrow.svg' | inline_asset_content -}}
          </a>
        </section>
        {% comment %} {% render 'jump-to' %} {% endcomment %}
      </div>
    </div>

    {% render 'product-media-modal', variant_images: variant_images %}

    {% assign popups = section.blocks | where: 'type', 'popup' %}
    {%- for block in popups -%}
      <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
        <div
          role="dialog"
          aria-label="{{ block.settings.text }}"
          aria-modal="true"
          class="product-popup-modal__content"
          tabindex="-1"
        >
          <button
            id="ModalClose-{{ block.id }}"
            type="button"
            class="product-popup-modal__toggle"
            aria-label="{{ 'accessibility.close' | t }}"
          >
            {{- 'icon-close.svg' | inline_asset_content -}}
          </button>
          <div class="product-popup-modal__content-info">
            <h1 class="h2">{{ block.settings.page.title | escape }}</h1>
            {{ block.settings.page.content }}
          </div>
        </div>
      </modal-dialog>
    {%- endfor -%}

    {%- if product.media.size > 0 -%}
      <script src="{{ 'product-modal.js' | asset_url }}" defer="defer"></script>
      <script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if first_3d_model -%}
      <script type="application/json" id="ProductJSON-{{ product.id }}">
        {{ product.media | where: 'media_type', 'model' | json }}
      </script>
      <script src="{{ 'product-model.js' | asset_url }}" defer></script>
    {%- endif -%}

    {%- liquid
      if product.selected_or_first_available_variant.featured_media
        assign seo_media = product.selected_or_first_available_variant.featured_media
      else
        assign seo_media = product.featured_media
      endif
    -%}

    <script type="application/ld+json">
      {{ product | structured_data }}
    </script>
    {% render 'jump-to' %}
  </div>
</product-info>

{% render 'calc-drawer' %}
<div id="sticky-add-to-cart">
  <div class="sticky-inner">
    <!-- Product Info -->
    <div class="sticky-product-info">
      <img 
        src="{{ product.featured_image | img_url: '100x100' }}" 
        alt="{{ product.title }}" 
        id="sticky-variant-image"
      >
      <div class="sticky-details">
        <span class="sticky-title" id="sticky-variant-title">{{ product.title }}</span>

        <!-- ✅ Selected Options will appear here -->
        <span class="sticky-variant-options" id="sticky-variant-options">
          {% if product.selected_or_first_available_variant %}
            {{ product.selected_or_first_available_variant.option1 }}
            {% if product.selected_or_first_available_variant.option2 %}
              / {{ product.selected_or_first_available_variant.option2 }}
            {% endif %}
          {% endif %}
        </span>

        <span class="sticky-price" id="sticky-price">
          {{ product.selected_or_first_available_variant.price | money }}
        </span>
      </div>
    </div>

    <!-- Add to Cart -->
    <form method="post" action="/cart/add" class="sticky-form">
      <input
        type="hidden"
        name="id"
        id="sticky-variant-id"
        value="{{ product.selected_or_first_available_variant.id }}"
      >
      <button type="submit" class="sticky-btn">Add to Cart</button>
    </form>
  </div>
</div>

{% comment %} <script>
document.addEventListener('DOMContentLoaded', function () {
  const productForm = document.querySelector('form[action="/cart/add"]');
  const stickyBar = document.getElementById('sticky-add-to-cart');
  const stickyOptionsEl = document.getElementById('sticky-variant-options');
  const stickyPriceEl = document.getElementById('sticky-price');
  const stickyVariantIdEl = document.getElementById('sticky-variant-id');
  const stickyImgEl = document.getElementById('sticky-variant-image');

  if (!productForm || !stickyBar) return;

  window.addEventListener('scroll', function () {
    const rect = productForm.getBoundingClientRect();
    if (rect.bottom < 0) {
      stickyBar.style.display = 'flex';
    } else {
      stickyBar.style.display = 'none';
    }
  });


  function getCurrentSelectedVariant() {
    const jsonEl = document.querySelector('[data-selected-variant]');
    if (!jsonEl) return null;
    try {
      return JSON.parse(jsonEl.textContent);
    } catch (e) {
      return null;
    }
  }


  function updateStickyBar() {
    const variant = getCurrentSelectedVariant();
    if (!variant) return;

    
    const optionsText = variant.options.filter(Boolean).join(' / ');
    stickyOptionsEl.textContent = optionsText;

    
    if (typeof Shopify !== 'undefined' && Shopify.formatMoney) {
      stickyPriceEl.innerHTML = Shopify.formatMoney(
        variant.price,
        window.meta?.money_format || '{{ shop.money_format }}'
      );
    } else {
      stickyPriceEl.textContent = (variant.price / 100).toFixed(2);
    }

   
    stickyVariantIdEl.value = variant.id;


    if (variant.featured_image && stickyImgEl) {
      stickyImgEl.src = variant.featured_image.src;
    }
  }

  setInterval(updateStickyBar, 1000);
  updateStickyBar();
});
</script> {% endcomment %}

<script>
document.addEventListener('DOMContentLoaded', function () {
  const productForm = document.querySelector('form[action="/cart/add"]');
  const stickyBar = document.getElementById('sticky-add-to-cart');
  const stickyOptionsEl = document.getElementById('sticky-variant-options');
  const stickyPriceEl = document.getElementById('sticky-price');
  const stickyVariantIdEl = document.getElementById('sticky-variant-id');
  const stickyImgEl = document.getElementById('sticky-variant-image');
  const stickyForm = document.querySelector('.sticky-form');

  if (!productForm || !stickyBar) return;

  // ===== Show/Hide Sticky Bar on Scroll =====
  window.addEventListener('scroll', function () {
    const rect = productForm.getBoundingClientRect();
    stickyBar.style.display = rect.bottom < 0 ? 'flex' : 'none';
  });

  // ===== Get Current Selected Variant =====
  function getCurrentSelectedVariant() {
    const jsonEl = document.querySelector('[data-selected-variant]');
    if (!jsonEl) return null;
    try {
      return JSON.parse(jsonEl.textContent);
    } catch (e) {
      return null;
    }
  }

  // ===== Update Sticky Bar Info =====
  function updateStickyBar() {
    const variant = getCurrentSelectedVariant();
    if (!variant) return;

    const optionsText = variant.options.filter(Boolean).join(' / ');
    stickyOptionsEl.textContent = optionsText;

    if (typeof Shopify !== 'undefined' && Shopify.formatMoney) {
      stickyPriceEl.innerHTML = Shopify.formatMoney(
        variant.price,
        window.meta?.money_format || '{{ shop.money_format }}'
      );
    } else {
      stickyPriceEl.textContent = (variant.price / 100).toFixed(2);
    }

    stickyVariantIdEl.value = variant.id;

    if (variant.featured_image && stickyImgEl) {
      stickyImgEl.src = variant.featured_image.src;
    }
  }

  setInterval(updateStickyBar, 1000);
  updateStickyBar();

  // ===== AJAX Add to Cart + Drawer + Bubble =====
  stickyForm.addEventListener('submit', function (e) {
    e.preventDefault();

    const variantId = stickyVariantIdEl.value;

    fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    })
      .then((res) => {
        if (!res.ok) throw new Error('Add to cart failed');
        return res.json();
      })
      .then(() => {
        // Fetch cart sections — this ensures updated cart HTML
        return fetch('/cart?sections=cart-drawer,cart-icon-bubble');
      })
      .then((res) => res.text())
      .then((responseText) => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(responseText, 'text/html');

        // Update Cart Drawer inner content
        const updatedDrawer = doc.querySelector('#CartDrawer');
        const currentDrawer = document.querySelector('#CartDrawer');
        if (updatedDrawer && currentDrawer) {
          currentDrawer.innerHTML = updatedDrawer.innerHTML;
        }

        // Update Cart Bubble
        const updatedBubble = doc.querySelector('#cart-icon-bubble');
        const currentBubble = document.querySelector('#cart-icon-bubble');
        if (updatedBubble && currentBubble) {
          currentBubble.innerHTML = updatedBubble.innerHTML;
        }

        // Open the cart drawer programmatically
        const cartDrawer = document.querySelector('cart-drawer');
        if (cartDrawer && typeof cartDrawer.open === 'function') {
          cartDrawer.open();
        }
      })
      .catch((err) => console.error('Error updating cart:', err));
  });
});
</script>


{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "t:sections.main-product.blocks.text.settings.text.default",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },

    {
      "type": "shipping_info",
      "name": "shipping_info",
      "limit": 1
    },

    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "sku",
      "name": "t:sections.main-product.blocks.sku.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.sku.settings.text_style.label"
        }
      ]
    },
    {
      "type": "inventory",
      "name": "t:sections.main-product.blocks.inventory.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "label": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.label",
          "min": 0,
          "max": 100,
          "step": 1,
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_inventory_quantity",
          "label": "t:sections.main-product.blocks.inventory.settings.show_inventory_quantity.label",
          "default": true
        }
      ]
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        },
        {
          "id": "swatch_shape",
          "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.label",
          "type": "select",
          "info": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.info",
          "options": [
            {
              "value": "circle",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__1.label"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__2.label"
            },
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__3.label"
            }
          ],
          "default": "circle"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "custom_review",
      "name": "Custom Review",
      "settings": [
        {
          "type": "richtext",
          "id": "custom_review",
          "label": "Custom Review Text"
        }
      ]
    },
    {
      "type": "product_features",
      "name": "Product Features",
      "limit": 1,
      "settings": [
        {
          "type": "textarea",
          "id": "feature_1_svg",
          "label": "Feature 1 SVG code"
        },
        {
          "type": "text",
          "id": "feature_1_text",
          "label": "Feature 1 text"
        },
        {
          "type": "textarea",
          "id": "feature_2_svg",
          "label": "Feature 2 SVG code"
        },
        {
          "type": "text",
          "id": "feature_2_text",
          "label": "Feature 2 text"
        },
        {
          "type": "textarea",
          "id": "feature_3_svg",
          "label": "Feature 3 SVG code"
        },
        {
          "type": "text",
          "id": "feature_3_text",
          "label": "Feature 3 text"
        },
        {
          "type": "textarea",
          "id": "feature_4_svg",
          "label": "Feature 4 SVG code"
        },
        {
          "type": "text",
          "id": "feature_4_text",
          "label": "Feature 4 text"
        },
        {
          "type": "textarea",
          "id": "feature_5_svg",
          "label": "Feature 5 SVG code"
        },
        {
          "type": "text",
          "id": "feature_5_text",
          "label": "Feature 5 text"
        }
      ]
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "t:sections.main-product.blocks.share.settings.text.default"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.custom-liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.custom-liquid.settings.custom_liquid.label",
          "info": "t:sections.custom-liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "t:sections.main-product.blocks.collapsible_tab.settings.heading.default",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "t:sections.main-product.blocks.popup.settings.link_label.default",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "complementary",
      "name": "t:sections.main-product.blocks.complementary_products.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.complementary_products.settings.paragraph.content"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "t:sections.main-product.blocks.complementary_products.settings.heading.default",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "checkbox",
          "id": "make_collapsible_row",
          "default": false,
          "label": "t:sections.main-product.blocks.complementary_products.settings.make_collapsible_row.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "price_tag",
          "info": "t:sections.main-product.blocks.complementary_products.settings.icon.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 10,
          "label": "t:sections.main-product.blocks.complementary_products.settings.product_list_limit.label"
        },
        {
          "type": "range",
          "id": "products_per_page",
          "min": 1,
          "max": 4,
          "step": 1,
          "default": 3,
          "label": "t:sections.main-product.blocks.complementary_products.settings.products_per_page.label"
        },
        {
          "type": "select",
          "id": "pagination_style",
          "options": [
            {
              "value": "dots",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_1"
            },
            {
              "value": "counter",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_2"
            },
            {
              "value": "numbers",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_3"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.label",
          "default": "counter"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.complementary_products.settings.product_card.heading"
        },
        {
          "type": "select",
          "id": "image_ratio",
          "options": [
            {
              "value": "portrait",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_1"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_2"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.label",
          "default": "square"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_add",
          "label": "t:sections.main-product.blocks.complementary_products.settings.enable_quick_add.label",
          "default": false
        }
      ]
    },
    {
      "type": "icon-with-text",
      "name": "t:sections.main-product.blocks.icon_with_text.name",
      "settings": [
        {
          "type": "select",
          "id": "layout",
          "options": [
            {
              "value": "horizontal",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__1.label"
            },
            {
              "value": "vertical",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__2.label"
            }
          ],
          "default": "horizontal",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.label"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.pairing_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.pairing_1.info"
        },
        {
          "type": "select",
          "id": "icon_1",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_1.label"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_1.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_1",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.pairing_2.label"
        },
        {
          "type": "select",
          "id": "icon_2",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "return",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_2.label"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_2.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_2",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.pairing_3.label"
        },
        {
          "type": "select",
          "id": "icon_3",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "truck",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_3.label"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_3.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_3",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label"
    },
    {
      "type": "checkbox",
      "id": "constrain_to_viewport",
      "default": true,
      "label": "t:sections.main-product.settings.constrain_to_viewport.label"
    },
    {
      "type": "select",
      "id": "media_fit",
      "options": [
        {
          "value": "contain",
          "label": "t:sections.main-product.settings.media_fit.options__1.label"
        },
        {
          "value": "cover",
          "label": "t:sections.main-product.settings.media_fit.options__2.label"
        }
      ],
      "default": "contain",
      "label": "t:sections.main-product.settings.media_fit.label"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__4.label"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__1.label"
        },
        {
          "value": "show",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__2.label"
        },
        {
          "value": "hide",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__3.label"
        }
      ],
      "default": "hide",
      "label": "t:sections.main-product.settings.mobile_thumbnails.label"
    },
    {
      "type": "select",
      "id": "media_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.main-product.settings.media_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.main-product.settings.media_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.main-product.settings.media_position.label"
    },
    {
      "type": "select",
      "id": "image_zoom",
      "options": [
        {
          "value": "lightbox",
          "label": "t:sections.main-product.settings.image_zoom.options__1.label"
        },
        {
          "value": "hover",
          "label": "t:sections.main-product.settings.image_zoom.options__2.label"
        },
        {
          "value": "none",
          "label": "t:sections.main-product.settings.image_zoom.options__3.label"
        }
      ],
      "default": "lightbox",
      "label": "t:sections.main-product.settings.image_zoom.label"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
