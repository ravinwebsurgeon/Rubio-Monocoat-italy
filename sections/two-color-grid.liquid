<section class="two-column-colour-grid">
  <div class="mobile-vhhg">
    <h2 class="color_heading">{{ section.settings.heading }}</h2>
    <p class="color_text">{{ section.settings.subtext }}</p>
  </div>
  <div class="container-cloor-com" data-aos="fade-up">
    <div class="left-column">
      <h2 class="color_heading" >{{ section.settings.heading }}</h2>
      <p class="color_text">{{ section.settings.subtext }}</p>
     
      <div class="colour-grid">
        {% for block in section.blocks %}
          <div class="colour-item"
               data-full="{{ block.settings.full_image | img_url: 'master' }}">
               
            {% if block.settings.image %}
              <div class="image-wrapper">
                <img src="{{ block.settings.image | img_url: '200x200' }}" alt="{{ block.settings.title }}">
              <div class="check-icon"> 
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="7" cy="7" r="7" fill="#183029"/>
                <path d="M6.58135 9.75001L4.44385 7.61251L4.97822 7.07813L6.58135 8.68126L10.022 5.24063L10.5563 5.77501L6.58135 9.75001Z" fill="white"/>
                </svg>
              </div>
              </div>
            {% endif %}
            <h4 class="color-inner-headeing">{{ block.settings.title }}</h4>
            <p class="color-inner-text">{{ block.settings.text }}</p>
          </div>
        {% endfor %}
    
      </div>
 
      <a href="{{ section.settings.button_link }}" class="colour-button">
        {{ section.settings.button_label }}
      </a>
    </div>
 
    <div class="right-column">
      {% if section.settings.right_image %}
        <img id="main-colour-image"
             src="{{ section.settings.right_image | img_url: 'master' }}"
             alt="Right Side Image">
      {% endif %}
    </div>
  </div>
</section>
 

<style>

  .two-column-colour-grid .colour-item .check-icon img {
    max-width: 15px;
    height: 15px;
}

.two-column-colour-grid .colour-item .image-wrapper {
    position: relative;
    width: 110px;
    max-width: 110px;
}

.two-column-colour-grid .colour-item .check-icon {
    display: none;
}

.two-column-colour-grid .colour-item .image-wrapper.active .check-icon {
    display: block;
    position: absolute;
    top: -2px;
    right: -10px;
}

.two-column-colour-grid .colour-item .image-wrapper.active .check-icon img {
    border: 0;
    border-radius: 0;
    padding: 0;
}
.two-column-colour-grid .colour-item .image-wrapper.active .check-icon svg {
    display: block;
}
  .two-column-colour-grid .colour-item .image-wrapper.active img {
  border: 0 solid #183029;
    display: block;
    border-radius: 20px;
    padding: 2px;
    cursor: pointer;
    outline: 2px solid #183029;
}

 .two-column-colour-grid .colour-item {
    cursor: pointer;
}

</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const swatches = document.querySelectorAll(".colour-item");
  const mainImage = document.getElementById("main-colour-image");

  if (swatches.length > 0) {
    // ✅ Default select the first swatch
    const firstSwatch = swatches[0];
    const firstImg = firstSwatch.getAttribute("data-full");
    const firstWrapper = firstSwatch.querySelector(".image-wrapper");

    // Add active class to first wrapper
    document.querySelectorAll(".image-wrapper").forEach(wrapper => wrapper.classList.remove("active"));
    if (firstWrapper) firstWrapper.classList.add("active");

    // Set main image
    if (firstImg && mainImage) {
      mainImage.src = firstImg;
    }
  }

  // ✅ Handle clicks on swatches
  swatches.forEach((swatch) => {
    swatch.addEventListener("click", () => {
      const fullImg = swatch.getAttribute("data-full");
      const wrapper = swatch.querySelector(".image-wrapper");

      // Update main image
      if (fullImg && mainImage) {
        mainImage.src = fullImg;
      }

      // Toggle active class on image wrappers
      document.querySelectorAll(".image-wrapper").forEach(wrapper => wrapper.classList.remove("active"));
      if (wrapper) wrapper.classList.add("active");
    });
  });
});


 $(document).ready(function(){
  function initSlick() {
    if ($(window).width() < 990) {
      if (!$('.colour-grid').hasClass('slick-initialized')) {
        $('.colour-grid').slick({
          slidesToShow: 3,
          slidesToScroll: 1,
          infinite: false,
          dots: true,
          arrows: false,
          prevArrow: '<div class="slick-prev"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M169.4 297.4C156.9 309.9 156.9 330.2 169.4 342.7L361.4 534.7C373.9 547.2 394.2 547.2 406.7 534.7C419.2 522.2 419.2 501.9 406.7 489.4L237.3 320L406.6 150.6C419.1 138.1 419.1 117.8 406.6 105.3C394.1 92.8 373.8 92.8 361.3 105.3L169.3 297.3z"/></svg></div>',
          nextArrow: '<div class="slick-next"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M471.1 297.4C483.6 309.9 483.6 330.2 471.1 342.7L279.1 534.7C266.6 547.2 246.3 547.2 233.8 534.7C221.3 522.2 221.3 501.9 233.8 489.4L403.2 320L233.9 150.6C221.4 138.1 221.4 117.8 233.9 105.3C246.4 92.8 266.7 92.8 279.2 105.3L471.2 297.3z"/></svg></div>',
          responsive: [
            {
              breakpoint: 768,
              settings: {
                slidesToShow: 3
              }
            }
          ]
        });
      }
    } else {
      if ($('.colour-grid').hasClass('slick-initialized')) {
        $('.colour-grid').slick('unslick');
      }
    }
  }

  initSlick();
  $(window).on('resize', function(){
    initSlick();
  });
}); 

</script>


<style>
.two-column-colour-grid .colour-button:hover {
    background: #1b3a27ad;
    transition: all ease 1s;
}
</style>
{% schema %}
{
  "name": "Two Column Colour Grid",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Popular interior colours"
    },
    {
      "type": "text",
      "id": "subtext",
      "label": "Subtext",
      "default": "Choose a colour to see how it looks on the stairs"
    },
    {
      "type": "image_picker",
      "id": "right_image",
      "label": "Default Right Side Image"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "View All Colours"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    }
  ],
  "blocks": [
    {
      "type": "color_item",
      "name": "Colour Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Swatch Thumbnail"
        },
        {
          "type": "image_picker",
          "id": "full_image",
          "label": "Full Preview Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Dunes"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Natuurlijke, witte tint"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Two Column Colour Grid",
      "category": "Custom",
      "blocks": [
        { "type": "color_item" },
        { "type": "color_item" },
        { "type": "color_item" }
      ]
    }
  ]
}
{% endschema %}