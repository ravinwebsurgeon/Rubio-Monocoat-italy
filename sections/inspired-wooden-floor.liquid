<section class="inspired-collage">
  <div class="collage-header">
    <h2>{{ section.settings.heading }}</h2>
    <p>{{ section.settings.subheading }}</p>
  </div>

  <div class="collage-grid">
    {% for block in section.blocks %}
      {% assign product = block.settings.product %}
      {% if product %}
        <div class="collage-item {% if forloop.first %}large{% else %}small{% endif %}" style="background-image: url('{{ block.settings.background_image | img_url: 'master' }}')">
          <a href="javascript:void(0);" class="product-overlay-btn" data-product-handle="{{ product.handle }}">
            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
              <circle cx="20" cy="20" r="20" fill="black" fill-opacity="0.5"/>
              <circle cx="20" cy="20" r="9" fill="white"/>
            </svg>
          </a>
          <div class="hotspot-popup">
            <span class="close-hotspot">&times;</span>
            <div class="hotspot-content"></div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</section>

<style>
.inspired-collage { max-width: 1200px; margin: 0 auto; padding: 40px 20px; }
.collage-header h2 { font-size: 32px; margin-bottom: 10px; }
.collage-header p { font-size: 16px; color: #666; }
.collage-grid { display: flex; flex-wrap: wrap; gap: 10px; }
.collage-item { position: relative; overflow: hidden; border-radius: 12px; cursor: pointer; background-size: cover; background-position: center; }
.collage-item.large { flex: 1 1 45%; height: 825px; }
.collage-item.small { flex: 1 1 27%; height: 400px; }
.product-overlay-btn { position: absolute; top: 10px; left: 10px; z-index: 10; }

/* Hotspot popup anchored to SVG */
.hotspot-popup {
  display: none;
  position: absolute;
  top: 50px;  /* initial offset from SVG, will adjust dynamically */
  left: 0;
  width: 250px;
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 8px 20px rgba(0,0,0,0.2);
  padding: 10px;
  z-index: 20;
}
.hotspot-popup .close-hotspot {
  position: absolute;
  top: 5px;
  right: 8px;
  font-size: 18px;
  cursor: pointer;
}
.hotspot-popup img {
  width: 100%;
  border-radius: 6px;
  margin-bottom: 10px;
}
.hotspot-popup h3 {
  margin: 0 0 5px;
  font-size: 16px;
  font-weight: 600;
}
.hotspot-popup p {
  font-size: 14px;
  margin-bottom: 10px;
}
.hotspot-popup button {
  width: 100%;
  padding: 8px;
  background: #183029;
  color: #fff;
  border: none;
  border-radius: 6px;
  cursor: pointer;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function(){
  const buttons = document.querySelectorAll(".product-overlay-btn");

  buttons.forEach(btn => {
    const popup = btn.closest(".collage-item").querySelector(".hotspot-popup");
    const content = popup.querySelector(".hotspot-content");
    const closeBtn = popup.querySelector(".close-hotspot");

    btn.addEventListener("click", function(e){
      const handle = this.dataset.productHandle;

      // Hide all other popups
      document.querySelectorAll(".hotspot-popup").forEach(p => { if(p !== popup) p.style.display = 'none'; });

      // Position popup relative to SVG
      const rect = btn.getBoundingClientRect();
      const parentRect = btn.closest(".collage-item").getBoundingClientRect();
      popup.style.top = (btn.offsetTop + btn.offsetHeight + 5) + 'px';
      popup.style.left = (btn.offsetLeft) + 'px';

      // Fetch product data
      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          content.innerHTML = `
            <img src="${product.images[0]}" alt="${product.title}">
            <h3>${product.title}</h3>
            <p>${product.body_html}</p>
            <form action="/cart/add" method="post">
              {% comment %} <select name="id">
                ${product.variants.map(v => `<option value="${v.id}">${v.title} - $${(v.price/100).toFixed(2)}</option>`).join('')}
              </select> {% endcomment %}
              <button type="submit">Add to Cart</button>
            </form>
          `;
          popup.style.display = "block";
        });
    });

    closeBtn.addEventListener("click", () => popup.style.display = "none");
  });

  // Close popup when clicking outside
  document.addEventListener("click", e => {
    if(!e.target.closest(".collage-item")) {
      document.querySelectorAll(".hotspot-popup").forEach(p => p.style.display = 'none');
    }
  });
});
</script>

{% schema %}
{
  "name": "Inspired Wooden Floors",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "Get inspired by wooden floors" },
    { "type": "text", "id": "subheading", "label": "Subheading", "default": "Create a bedroom worth staying awake for with these inspiring ideas." }
  ],
  "blocks": [
    {
      "type": "product_block",
      "name": "Product",
      "settings": [
        { "type": "product", "id": "product", "label": "Select Product" },
        { "type": "image_picker", "id": "background_image", "label": "Background Image" }
      ]
    }
  ],
  "presets": [
    { "name": "Inspired Wooden Floors", "category": "Sections", "blocks": [ { "type": "product_block" } ] }
  ]
}
{% endschema %}
